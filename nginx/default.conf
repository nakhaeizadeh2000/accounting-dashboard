# Nginx Configuration File

worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /dev/stdout;
    error_log /dev/stderr;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=100m;

    server {
        listen 80;
        server_name red-desert-developers.ir;

        # Redirect HTTP to HTTPS (if SSL is configured)
        return 301 https://$host$request_uri;

        location / {
            proxy_pass http://client:3000;  # Adjust if your client runs on a different port
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/ {
            proxy_pass http://api:4000;  # Adjust if your API runs on a different port
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/files/ {
            limit_req zone=one burst=10 nodelay;  # Apply rate limiting here
            internal;  # Only allow internal redirects
            alias /files/;  # Map to the actual file storage location
        }

        location /_next/webpack-hmr {
            proxy_pass http://client:3000; # Proxy to client HMR
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # error_page 404 /404.html;
        # location = /404.html {
        #     root html;
        #     internal;
        # }
    }

    server {
        listen 443 ssl http2;  # Enable SSL/TLS
        server_name red-desert-developers.ir;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;   # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;  # Path to your SSL certificate key

        ssl_protocols TLSv1.2 TLSv1.3;  # Enable secure protocols
        ssl_ciphers 'HIGH:!aNULL:!MD5';   # Secure ciphers

        # Include security headers (minimum best practices)
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Frame-Options DENY always;
        add_header Content-Security-Policy "default-src 'self';" always;

        location / {
            proxy_pass http://client:3000; 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/ {
            proxy_pass http://api:4000; 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/files/ {
            limit_req zone=one burst=10 nodelay;  
            internal;  
            alias /files/;  
        }

        location /_next/webpack-hmr {
            proxy_pass http://client:3000; # Proxy to client HMR
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }   
    }
}